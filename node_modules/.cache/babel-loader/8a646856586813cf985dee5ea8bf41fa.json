{"remainingRequest":"/home/vonmeme/Escritorio/technical-test-apeteat/technical-test-vue/node_modules/babel-loader/lib/index.js!/home/vonmeme/Escritorio/technical-test-apeteat/technical-test-vue/src/store/index.js","dependencies":[{"path":"/home/vonmeme/Escritorio/technical-test-apeteat/technical-test-vue/src/store/index.js","mtime":1600721894832},{"path":"/home/vonmeme/Escritorio/technical-test-apeteat/technical-test-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vonmeme/Escritorio/technical-test-apeteat/technical-test-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgVnVleCBmcm9tICd2dWV4JzsKVnVlLnVzZShWdWV4KTsKZXhwb3J0IGRlZmF1bHQgbmV3IFZ1ZXguU3RvcmUoewogIHN0YXRlOiB7CiAgICBpdGVtTGlzdDogW10sCiAgICBzaGFrZWQ6IGZhbHNlCiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIGFkZFRvTGlzdDogZnVuY3Rpb24gYWRkVG9MaXN0KHN0YXRlLCBkYXRhKSB7CiAgICAgIHZhciBpbmRleCA9IHN0YXRlLml0ZW1MaXN0Lm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLmlkOwogICAgICB9KS5pbmRleE9mKGRhdGEuaWQpOwoKICAgICAgaWYgKGluZGV4ID09PSAtMSkgewogICAgICAgIHN0YXRlLml0ZW1MaXN0LnB1c2goZGF0YSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgc3RhdGUuaXRlbUxpc3RbaW5kZXhdLnF1YW50aXR5ICs9IDE7CiAgICAgIH0KICAgIH0sCiAgICByZW1vdmVGcm9tTGlzdDogZnVuY3Rpb24gcmVtb3ZlRnJvbUxpc3Qoc3RhdGUsIGl0ZW1JZCkgewogICAgICBzdGF0ZS5pdGVtTGlzdCA9IHN0YXRlLml0ZW1MaXN0LmZpbHRlcihmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLmlkICE9PSBpdGVtSWQ7CiAgICAgIH0pOwogICAgfSwKICAgIGNsZWFyTGlzdDogZnVuY3Rpb24gY2xlYXJMaXN0KHN0YXRlKSB7CiAgICAgIHN0YXRlLml0ZW1MaXN0ID0gW107CiAgICB9LAogICAgc2hha2U6IGZ1bmN0aW9uIHNoYWtlKHN0YXRlKSB7CiAgICAgIHN0YXRlLnNoYWtlZCA9IHRydWU7CiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBzdGF0ZS5zaGFrZWQgPSBmYWxzZTsKICAgICAgfSwgMTAwMCk7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBhZGRUb0xpc3Q6IGZ1bmN0aW9uIGFkZFRvTGlzdChjb250ZXh0LCBpdGVtKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIF90aGlzLmNvbW1pdCgnYWRkVG9MaXN0JywgaXRlbSk7CgogICAgICAgIHJlc29sdmUoKTsKICAgICAgfSk7CiAgICB9LAogICAgcmVtb3ZlRnJvbUxpc3Q6IGZ1bmN0aW9uIHJlbW92ZUZyb21MaXN0KGNvbnRleHQsIGl0ZW1JZCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgX3RoaXMyLmNvbW1pdCgncmVtb3ZlRnJvbUxpc3QnLCBpdGVtSWQpOwoKICAgICAgICByZXNvbHZlKCk7CiAgICAgIH0pOwogICAgfSwKICAgIGNsZWFyTGlzdDogZnVuY3Rpb24gY2xlYXJMaXN0KGNvbnRleHQpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIF90aGlzMy5jb21taXQoJ2NsZWFyTGlzdCcpOwoKICAgICAgICByZXNvbHZlKCk7CiAgICAgIH0pOwogICAgfSwKICAgIHNoYWtlOiBmdW5jdGlvbiBzaGFrZShjb250ZXh0KSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICBfdGhpczQuY29tbWl0KCdzaGFrZScpOwoKICAgICAgICByZXNvbHZlKCk7CiAgICAgIH0pOwogICAgfQogIH0sCiAgZ2V0dGVyczogewogICAgaXRlbUxpc3Q6IGZ1bmN0aW9uIGl0ZW1MaXN0KHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5pdGVtTGlzdDsKICAgIH0sCiAgICBzaGFrZWQ6IGZ1bmN0aW9uIHNoYWtlZChzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuc2hha2VkOwogICAgfQogIH0KfSk7"},{"version":3,"sources":["/home/vonmeme/Escritorio/technical-test-apeteat/technical-test-vue/src/store/index.js"],"names":["Vue","Vuex","use","Store","state","itemList","shaked","mutations","addToList","data","index","map","item","id","indexOf","push","quantity","removeFromList","itemId","filter","clearList","shake","setTimeout","actions","context","Promise","resolve","reject","commit","getters"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    itemList: [],\n    shaked: false,\n  },\n  mutations: {\n    addToList(state, data) {\n      const index = state.itemList.map(item => item.id).indexOf(data.id);\n      if (index === -1) {\n          state.itemList.push(data);          \n      } else {\n        state.itemList[index].quantity += 1;\n      }\n    },\n    removeFromList(state, itemId) {\n      state.itemList = state.itemList.filter((item) => item.id !== itemId);\n    },\n    clearList(state, ){\n      state.itemList = []\n    },\n    shake(state, ){ \n      state.shaked = true;\n      setTimeout(() => state.shaked = false, 1000)\n     } \n  },\n  actions: {\n    addToList(context, item) {\n      return new Promise((resolve, reject) => {\n        this.commit('addToList', item);\n        resolve();\n      })\n    },\n    removeFromList(context, itemId) {\n      return new Promise((resolve, reject) => {\n        this.commit('removeFromList', itemId);\n        resolve();\n      })\n    },\n    clearList(context, ){\n      return new Promise((resolve, reject) => {\n        this.commit('clearList', );\n        resolve();\n      })\n    },\n    shake(context, ){\n      return new Promise((resolve, reject) => { \n        this.commit('shake', );\n        resolve();\n      })\n    },\n  },\n  getters: {\n    itemList(state) { return state.itemList; },\n    shaked(state) { return state.shaked; },\n  },\n});\n"]}]}